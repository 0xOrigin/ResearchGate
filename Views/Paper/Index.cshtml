@using Research_Gate.Controllers
@using Research_Gate.Models
@model Research_Gate.ViewModels.AuthorPaperViewModel

@{
    ViewBag.Title = Model.Paper.Title;

    bool IsLiked = false;
    bool IsDisLiked = false;
    IEnumerable<Comment> comments = new List<Comment>();

    int authorID = 0;

    if (Session["id"] != null)
    {
        authorID = (int)Session["id"];

        IsLiked = Model.Paper.Like.Count(author => author.Author_id == authorID) > 0;
        IsDisLiked = Model.Paper.Dislike.Count(author => author.Author_id == authorID) > 0;

        comments = Model.Paper.Comments.OrderByDescending(c => c.Time).ToList();
    }
}

<style>
    .wrapper {
        padding-top: 3.5em !important;
    }
    hr {
        width: 410px;
    }
</style>

<div class="paper-container">

    <div class="paper-info-container">

        <div>
            <div class="paper-name">@Model.Paper.Title</div>
            <div class="paper-publish-date">@Model.Paper.Publish_date.ToString("dddd, dd MMMM yyyy")</div>
            <div class="author-labels">Authors:</div>
        </div>

        <div class="participated-authors">

            @foreach (Author author in Model.Paper.Participation)
            {
                <div class="author">
                    <a class="profile-link-name" target="_blank" href="@Url.Action("Index", "Profile", new { id = author.Author_id })">
                        <img src="@Url.Content(FileUtility.GetAuthorImage(author.Image))" class="author-img" id="imgs" />
                    </a>
                    <div>
                        <div>
                            <a class="profile-link-name" target="_blank" href="@Url.Action("Index", "Profile", new { id = author.Author_id })">
                                <span class="author-name">@author.Fname @author.Lname</span>
                            </a>
                        </div>
                        <div>
                            <span class="author-uni">@author.University</span>
                        </div>
                    </div>
                </div>
            }
        </div>

    </div>
    <div class="paper-view-container">
        <embed class="paper-file" src="@Url.Content(FileUtility.GetPaperFile(Model.Paper.File))" title="Paper1" />
    </div>

    @if (Session["id"] != null)
    {
        <div class="paper-interactions-container">

            <div id="likes-dislikes-box">

                <div class="like-actions">
                    <div class="like-button" id="like-button">
                        <div class="button-style">
                            <i id="like-symbol" class="fa fa-thumbs-up" style="color: @(IsLiked ? "blue" : "black");"></i>
                        </div>
                        <span class="number-of">@Model.Paper.Like.Count</span>
                    </div>

                    <div class="dislike-button" id="dislike-button">
                        <div class="button-style">
                            <i id="dislike-symbol" class="fa fa-thumbs-down" style="color: @(IsDisLiked ? "blue" : "black");"></i>
                        </div>
                        <span class="number-of">@Model.Paper.Dislike.Count</span>
                    </div>
                </div>

            </div>

            <hr />

            <div class="comment-box">

                <a class="profile-link-name" style="margin-right: 10px;" target="_blank" href="@Url.Action("Index", "Profile", new {id = Model.Author.Author_id})">
                    <img src="@Url.Content(FileUtility.GetAuthorImage(Model.Author.Image))" class="image" id="imgs" />
                </a>
                <textarea id="comment-text-box"></textarea>
                <input type="button" name="Comment" value="Comment" id="comment-button" />

            </div>
            <hr />
            <div id="comments">

                @foreach (Comment comment in comments)
                {
                    <div class="comment">
                        <table>
                            <tr>
                                <td rowspan="2" class="fixed-img">
                                    <a class="profile-link-name" style="margin-right: 10px;" target="_blank" href="@Url.Action("Index", "Profile", new { id = comment.Author.Author_id })">
                                        <img src="@Url.Content(FileUtility.GetAuthorImage(comment.Author.Image))" class="image" />
                                    </a>
                                </td>
                                <td>
                                    <a class="profile-link-name" style="margin-right: 10px; display: block;" target="_blank" href="@Url.Action("Index", "Profile", new { id = comment.Author.Author_id })">
                                        <span class="comment-author-name">@comment.Author.Fname @comment.Author.Lname</span>
                                    </a>
                                </td>
                                <td class="comment-time">
                                    @comment.Time
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3">
                                    <div class="comment-content" id="comment-id-@comment.Comment_id" contenteditable="false">@comment.Content</div>
                                </td>
                                @if (authorID == comment.Author.Author_id)
                                {
                                    <td class="edit-button @comment.Comment_id">
                                        <i class="fa fa-pencil-square-o" aria-hidden="true"></i>
                                        <div class="update-button @comment.Comment_id" id="update-button-@comment.Comment_id">
                                            <i class="fa fa-check" aria-hidden="true"></i>
                                        </div>
                                    </td>
                                    
                                    <td class="delete-button @comment.Comment_id">
                                        <i class="fa fa-trash" aria-hidden="true"></i>
                                    </td>
                                }
                            </tr>
                        </table>
                        <hr />
                    </div>
                }

            </div>
        </div>

    }

</div>

@section Scripts
{
    <script>

        $("#likes-dislikes-box").on('click', '#like-symbol', function () {
            $.ajax({
                url: "/Paper/Like/" + @Model.Paper.Paper_id,
                type: 'POST',
                async: true,
                cache: false,
                success: function (result) {

                    $("#likes-dislikes-box").html(result);

                },
                error: function (xhr) {
                    alert("An error occurred: " + xhr.status + " " + xhr.statusText);
                }
            });
        });


        $("#likes-dislikes-box").on('click', '#dislike-symbol', function () {

                $.ajax({
                    url: "/Paper/DisLike/" + @Model.Paper.Paper_id,
                    type: 'POST',
                    async: true,
                    cache: false,
                    success: function (result) {

                        $("#likes-dislikes-box").html(result);

                    },
                    error: function (xhr) {
                        alert("An error occurred: " + xhr.status + " " + xhr.statusText);
                    }
                });

        });


        $("#comment-button").on('click', function() {
            $.ajax({
                url: "/Paper/Comment",
                type: 'POST',
                async: true,
                cache: false,
                dataType: "text",
                data: { 'paperId': @Model.Paper.Paper_id, 'comment': $("#comment-text-box").val()},
                success: function (result) {

                    $("#comments").html(result);

                },
                error: function (xhr) {
                    alert("An error occurred: " + xhr.status + " " + xhr.statusText);
                }
            });
        });


        $("#comments").on('click', '.delete-button', function() {
            $.ajax({
                url: "/Paper/DeleteComment/" + $(this).attr("class").split(' ')[1],
                type: 'POST',
                async: true,
                cache: false,
                success: function (result) {

                    $("#comments").html(result);

                },
                error: function (xhr) {
                    alert("An error occurred: " + xhr.status + " " + xhr.statusText);
                }
            });
        });

        $("#comments").on('click', '.edit-button', function () {
            var commentID = $(this).attr("class").split(' ')[1];
            if ($("#comment-id-" + commentID).attr("contenteditable") == "false") {

                $("#comment-id-" + commentID).attr("contenteditable", "true");
                $("#comment-id-" + commentID).focus();

                $("#update-button-" + commentID).attr("style", "display: block;");

            } else {
                $("#comment-id-" + commentID).attr("contenteditable", "false");
                $("#update-button-" + commentID).attr("style", "display: none;");
            }
        });

        $("#comments").on('click', '.update-button', function () {

            var commentID = $(this).attr("class").split(' ')[1];
            $("#update-button-" + commentID).attr("style", "display: none;");

            $.ajax({
                url: "/Paper/EditComment",
                type: 'POST',
                async: true,
                cache: false,
                dataType: "text",
                data: { 'commentId': commentID, 'newComment': $("#comment-id-" + commentID).text() },
                success: function (result) {

                    $("#comments").html(result);

                },
                error: function (xhr) {
                    alert("An error occurred: " + xhr.status + " " + xhr.statusText);
                }
            });
        });
    </script>
}
