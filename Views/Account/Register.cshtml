@using Research_Gate.Controllers
@model Research_Gate.Models.Author

@{
    ViewBag.Title = "Register";
}

<style>
    .author-image {
        width: 150px;
        height: 150px;
        float: none;
        margin-bottom: 15px;
    }

    input {
        max-width: 100%;
    }
</style>

<div class="register-container">

    <h2 style="margin-top: 25px;">Register</h2>

    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

            <hr style="width: 100%;" />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            
            <div class="form-group img-group">
                <img class="author-image" id="img" src="@Url.Content(FileUtility.GetAuthorImage("default"))"/>
                <div class="input-group mb-3">
                    <label class="input-group-text" for="inputGroupFile01">Upload image</label>
                    <input type="file" accept=".jpg, .jpeg, .png, .gif" class="form-control" id="inputGroupFile01" name="file" onchange="readImg(this);">
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Fname, htmlAttributes: new { @class = "form-label required-field" })
                <div style="width: 100%;">
                    @Html.EditorFor(model => model.Fname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Fname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Lname, htmlAttributes: new { @class = "form-label required-field" })
                <div style="width: 100%;">
                    @Html.EditorFor(model => model.Lname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Lname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.University, htmlAttributes: new { @class = "form-label required-field" })
                <div style="width: 100%;">
                    @Html.EditorFor(model => model.University, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.University, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "form-label required-field" })
                <div style="width: 100%;">
                    @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "form-label required-field" })
                <div style="width: 100%;">
                    @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label required-field" })
                <div style="width: 100%;">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "form-label required-field" })
                <div style="width: 100%;">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "form-label required-field" })
                <div style="width: 100%;">
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>

        <div class="form-group">
                <div style="width: 100%;">
                    <input type="submit" value="Register" class="btn btn-light" />
                </div>
            </div>
    }

</div>

@section Scripts
{
    <script>
        function readImg(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#img').attr('src', e.target.result);
                };

                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>
}
